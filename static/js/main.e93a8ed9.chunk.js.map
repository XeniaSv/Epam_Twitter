{"version":3,"sources":["components/InfoButton.js","components/SearchButton.js","components/SearchField.js","resource/twitter.svg","pages/FirstPage.js","components/Formater.js","containers/NavBar.js","components/Comment.js","containers/Tweet.js","resource/calendar.svg","pages/TwittPage.js","App.js","reportWebVitals.js","index.js"],"names":["blueTheme","createMuiTheme","palette","primary","light","main","blue","dark","contrastText","useStyles","makeStyles","theme","typography","padding","spacing","fontFamily","join","InfoButton","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","IconButton","color","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","className","SearchButton","handlerOnClick","value","document","querySelector","trim","users","state","length","some","doc","window","process","alert","firebase","firestore","collection","get","then","querySnapshot","forEach","array","slice","push","setState","Button","variant","this","Component","SearchField","props","keyPress","e","keyCode","Autocomplete","freeSolo","disableClearable","autoComplete","options","map","user","renderInput","params","TextField","label","onKeyDown","InputProps","type","defaultProps","FirstPage","alt","src","twitterImg","Formater","labelValue","Math","abs","Number","root","flexGrow","position","right","left","backgroundColor","menuButton","marginRight","title","display","marginLeft","breakpoints","up","search","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputInput","paddingLeft","SearchAppBar","AppBar","Toolbar","edge","href","noWrap","maxWidth","marginTop","marginBottom","media","paddingTop","avatar","text","textAlign","float","subheader","RecipeReviewCard","Card","CardHeader","Avatar","CardContent","component","expand","grey","transform","transition","transitions","create","duration","shortest","expandOpen","like","reply","fontSize","expanded","setExpanded","date","image","likes","retweet","name","userId","docId","useEffect","data","twittDate","moment","Date","seconds","format","Image","Likes","Retweet","Text","CardMedia","CardActions","disableSpacing","clsx","Collapse","in","timeout","unmountOnExit","paragraph","TwittPage","QuoteCheck","quote","style","Name","ID","Joined","Following","Followers","Quote","TweetsId","db","queryString","location","URLSearchParams","CalImg","Tweet","App","history","path","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createBrowserHistory","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.e93a8ed9.chunk.js","sourcesContent":["import blue from '@material-ui/core/colors/blue';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport {\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nimport React from 'react';\r\n\r\nconst blueTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#757ce8',\r\n      main: blue[400],\r\n      dark: '#002884',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(3),\r\n    fontFamily: ['Open Sans', 'serif'].join(','),\r\n  },\r\n}));\r\n\r\nfunction InfoButton() {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <MuiThemeProvider theme={blueTheme}>\r\n      <IconButton id=\"info-button\" color=\"primary\" onClick={handleClick}>\r\n        <InfoIcon />\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>\r\n          Это приложение отображает твиты разных пользователей. Вам нужно ввести\r\n          точный Ник профиля и нажать на кнопку Найти\r\n        </Typography>\r\n      </Popover>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default InfoButton;\r\n","import Button from '@material-ui/core/Button';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nimport React from 'react';\r\n\r\nconst blueTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#757ce8',\r\n      main: blue[400],\r\n      dark: '#002884',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nclass SearchButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const db = firebase.firestore();\r\n    db.collection('users')\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const { users } = this.state;\r\n          const array = users.slice();\r\n          array.push({ id: doc.id });\r\n          this.setState({ users: array });\r\n        });\r\n      });\r\n  }\r\n\r\n  handlerOnClick = () => {\r\n    const value = document\r\n      .querySelector('.search-text-field')\r\n      .querySelector('input')\r\n      .value.trim();\r\n    const { users } = this.state;\r\n    if (\r\n      value.length !== 0\r\n      && users.some((doc) => doc.id === value)\r\n    ) {\r\n      window.open(`${process.env.PUBLIC_URL}/search?searchValue=${value}`, '_self');\r\n    } else if (\r\n      value.length !== 0\r\n      && !users.some((doc) => doc.id === value)\r\n    ) {\r\n      alert('Данного пользователя невозможно найти.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={blueTheme}>\r\n        <Button\r\n          className=\"search-button\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={this.handlerOnClick}\r\n        >\r\n          Найти\r\n        </Button>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\nexport default SearchButton;\r\n","import TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\n\r\nclass SearchField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n    };\r\n    this.className = props.className;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const db = firebase.firestore();\r\n    db.collection('users')\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const { users } = this.state;\r\n          const array = users.slice();\r\n          array.push({ id: doc.id });\r\n          this.setState({ users: array });\r\n        });\r\n      });\r\n  }\r\n\r\n  keyPress = (e) => {\r\n    const value = document\r\n      .querySelector(`.${this.className}`)\r\n      .querySelector('input')\r\n      .value.trim();\r\n    const { users } = this.state;\r\n    if (\r\n      e.keyCode === 13\r\n      && value.length !== 0\r\n      && users.some((doc) => doc.id === value)\r\n    ) {\r\n      window.open(`${process.env.PUBLIC_URL}/search?searchValue=${value}`, '_self');\r\n    } else if (\r\n      e.keyCode === 13\r\n      && value.length !== 0\r\n      && !users.some((doc) => doc.id === value)\r\n    ) {\r\n      alert('Данного пользователя невозможно найти.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n    return (\r\n      <Autocomplete\r\n        className={this.className}\r\n        freeSolo\r\n        disableClearable\r\n        autoComplete\r\n        options={users.map((user) => user.id)}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Поиск\"\r\n            onKeyDown={this.keyPress}\r\n            InputProps={{ ...params.InputProps, type: 'search' }}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSearchField.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nSearchField.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default SearchField;\r\n","export default __webpack_public_path__ + \"static/media/twitter.69921557.svg\";","import './FirstPage.css';\r\n\r\nimport InfoButton from '../components/InfoButton';\r\nimport SearchButton from '../components/SearchButton';\r\nimport SearchField from '../components/SearchField';\r\n\r\nimport twitterImg from '../resource/twitter.svg';\r\n\r\nimport React from 'react';\r\n\r\nexport default function FirstPage() {\r\n  return (\r\n    <>\r\n      <header>\r\n        <InfoButton className=\"info-button\" />\r\n      </header>\r\n\r\n      <main className=\"first-page-main\">\r\n        <div className=\"h1-and-icon\">\r\n          <h1>Mini Twitter</h1>\r\n          <img alt=\"Twitter icon\" className=\"twitter\" src={twitterImg} />\r\n        </div>\r\n\r\n        <div className=\"search-div\">\r\n          <SearchField className=\"search-text-field\" />\r\n          <SearchButton />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","export default function Formater(labelValue) {\r\n    return (Math.abs(Number(labelValue)) >= 1.0e9\r\n    ? `${Math.abs(Number(labelValue)) / 1.0e9}B`\r\n    : // Six Zeroes for Millions\r\n    Math.abs(Number(labelValue)) >= 1.0e6\r\n    ? `${Math.abs(Number(labelValue)) / 1.0e6}M`\r\n    : // Three Zeroes for Thousands\r\n    Math.abs(Number(labelValue)) >= 1.0e3\r\n    ? `${Math.abs(Number(labelValue)) / 1.0e3}K`\r\n    : Math.abs(Number(labelValue)))\r\n}\r\n","import SearchField from '../components/SearchField';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: 'fixed',\r\n    right: theme.spacing(0),\r\n    left: theme.spacing(0),\r\n    backgroundColor: '#42a5f5',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    marginLeft: theme.spacing(23),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          href={`${process.env.PUBLIC_URL}/home`}\r\n        >\r\n          <ArrowBackIosIcon />\r\n        </IconButton>\r\n        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n          Mini Twitter\r\n        </Typography>\r\n        <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n          </div>\r\n          <SearchField className={classes.inputInput} />\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    maxWidth: 700,\r\n    marginTop: '30px',\r\n    marginBottom: '30px',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[500],\r\n  },\r\n  text: {\r\n    textAlign: 'left',\r\n  },\r\n  title: {\r\n    float: 'left',\r\n  },\r\n\r\n  subheader: {\r\n    marginTop: '15px',\r\n    marginRight: '480px',\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={<Avatar className={classes.avatar}>R</Avatar>}\r\n        title={<p className={classes.title}>Shrimp and Chorizo Paella</p>}\r\n        subheader={<p className={classes.subheader}>September 14, 2016</p>}\r\n      />\r\n      <CardContent>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          className={classes.text}\r\n        >\r\n          This impressive paella is a perfect party dish and a fun meal to cook\r\n          together with your guests. Add 1 cup of frozen peas along with the\r\n          mussels, if you like.\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import Comment from '../components/Comment';\r\n\r\nimport Formater from '../components/Formater';\r\n\r\nimport '../pages/TwittPage.css';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nimport moment from 'moment';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 800,\r\n    marginTop: '30px',\r\n    marginBottom: '30px',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    color: grey[600],\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: grey[600],\r\n  },\r\n\r\n  like: {\r\n    color: grey[600],\r\n    width: '30px',\r\n    height: '30px',\r\n  },\r\n\r\n  reply: {\r\n    color: grey[600],\r\n    width: '30px',\r\n    height: '30px',\r\n  },\r\n\r\n  text: {\r\n    fontSize: '16px',\r\n    marginLeft: '5px',\r\n    marginRight: '5px',\r\n    color: grey[600],\r\n  },\r\n}));\r\n\r\nfunction RecipeReviewCard(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [state, setState] = useState({\r\n     date: 'Loading...',\r\n     image: '',\r\n     likes: 'Loading...',\r\n     retweet: 'Loading...',\r\n     text: 'Loading...',\r\n  });\r\n  const {\r\n    name,\r\n    userId,\r\n    avatar,\r\n    docId,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const db = firebase.firestore();\r\n    db.collection(`${userId}Tweets`).doc(docId).get().then((doc) => {\r\n      const data = doc.data();\r\n      const twittDate = moment(data.Date.seconds * 1000).format('hh:mm, MMMM DD, YYYY');\r\n      setState({\r\n        date: twittDate,\r\n        image: data.Image,\r\n        likes: Formater(data.Likes),\r\n        retweet: Formater(data.Retweet),\r\n        text: data.Text,\r\n      });\r\n    });\r\n  });\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const returnImage = () => {\r\n    if (state.image !== '') {\r\n      return (\r\n        <CardMedia className={classes.media} image={state.image} title=\"Image\" />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={<Avatar className={classes.avatar} src={avatar} />}\r\n        title={`${name} ${userId}`}\r\n        subheader={state.date}\r\n      />\r\n\r\n      {returnImage()}\r\n\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {state.text}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions disableSpacing className=\"statistics\">\r\n        <div className=\"statistics-container\">\r\n          <p className={classes.text}>\r\n            <b>{state.likes}</b>\r\n            Likes\r\n          </p>\r\n          <FavoriteIcon className={classes.like} />\r\n        </div>\r\n        <div className=\"statistics-container\">\r\n          <p className={classes.text}>\r\n            <b>{state.retweet}</b>\r\n            Retweets\r\n          </p>\r\n          <ReplyIcon className={classes.reply} />\r\n        </div>\r\n        <div className=\"statistics-container\">\r\n          <p className={classes.text}>\r\n            <b>157</b>\r\n            Comments\r\n          </p>\r\n          <IconButton>\r\n            <CommentIcon\r\n              className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n              })}\r\n              onClick={handleExpandClick}\r\n            >\r\n              <ExpandMoreIcon />\r\n            </CommentIcon>\r\n          </IconButton>\r\n        </div>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>\r\n            <Comment />\r\n            <Comment />\r\n            <Comment />\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n\r\nRecipeReviewCard.defaultProps = {\r\n  name: '',\r\n  userId: '',\r\n  avatar: '',\r\n  docId: '',\r\n};\r\n\r\nRecipeReviewCard.propTypes = {\r\n  name: PropTypes.string,\r\n  userId: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  docId: PropTypes.string,\r\n};\r\n\r\nexport default RecipeReviewCard;\r\n","export default __webpack_public_path__ + \"static/media/calendar.ce421b1b.svg\";","import './TwittPage.css';\r\n\r\nimport Formater from '../components/Formater';\r\n\r\nimport NavBar from '../containers/NavBar';\r\nimport Tweet from '../containers/Tweet';\r\nimport CalImg from '../resource/calendar.svg';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nimport moment from 'moment';\r\n\r\nimport React from 'react';\r\n\r\nclass TwittPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      Name: 'Loading...',\r\n      ID: 'Loading...',\r\n      Joined: 'Loading...',\r\n      Following: 'Loading...',\r\n      Followers: 'Loading...',\r\n      Quote: 'Loading...',\r\n      Image: '',\r\n      TweetsId: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const db = firebase.firestore();\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const id = urlParams.get('searchValue');\r\n    db.collection('users')\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        const data = doc.data();\r\n        const date = moment(data.Joined.seconds * 1000).format('MMMM YYYY');\r\n\r\n        this.setState({\r\n          Name: data.Name,\r\n          ID: doc.id,\r\n          Joined: date,\r\n          Following: Formater(data.Following),\r\n          Followers: Formater(data.Followers),\r\n          Quote: this.QuoteCheck(data.Quote),\r\n          Image: data.Image,\r\n        });\r\n    });\r\n    db.collection(`${id}Tweets`).get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        const { TweetsId } = this.state;\r\n        const array = TweetsId.slice();\r\n        array.push(doc.id);\r\n        this.setState({ TweetsId: array });\r\n      });\r\n    });\r\n  }\r\n\r\n  QuoteCheck = (quote) => {\r\n    if (quote.length === 0) {\r\n      document.querySelector('blockquote').style.display = 'none';\r\n      return null;\r\n    }\r\n    return quote;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      Name,\r\n      ID,\r\n      Joined,\r\n      Following,\r\n      Followers,\r\n      Quote,\r\n      Image,\r\n      TweetsId,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <main className=\"twittPage-main\">\r\n          <Avatar alt=\"Remy Sharp\" src={Image} id=\"avatar\" />\r\n          <h1>{Name}</h1>\r\n          <h3>{ID}</h3>\r\n          <blockquote>{Quote}</blockquote>\r\n          <div className=\"account-info\">\r\n            <div className=\"container\">\r\n              <img id=\"cal-img\" alt=\"User\" src={CalImg} />\r\n              <p>\r\n                &nbsp; Joined\r\n                {Joined}\r\n              </p>\r\n            </div>\r\n            <div className=\"container\">\r\n              <b>{Following}</b>\r\n              <p>&nbsp; Following</p>\r\n            </div>\r\n            <div className=\"container\">\r\n              <b>{Followers}</b>\r\n              <p>&nbsp; Followers</p>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n\r\n          {TweetsId.map((id) => (\r\n            <Tweet name={Name} userId={ID} avatar={Image} docId={id} />\r\n          ))}\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TwittPage;\r\n","import React from 'react';\r\n\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport FirstPage from './pages/FirstPage';\r\nimport TwittPage from './pages/TwittPage';\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n          <Switch>\r\n            <Route history={history} path=\"/home\" component={FirstPage} />\r\n            <Route history={history} path=\"/search\" component={TwittPage} />\r\n            <Redirect from=\"/\" to=\"/home\" />\r\n          </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n getCLS, getFID, getFCP, getLCP, getTTFB,\r\n}) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import App from './App';\r\n\r\nimport './index.css';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport firebase from 'firebase';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCdxtxrAle5FDE33LpqKFSSfVn5Kysvfic',\r\n  authDomain: 'mini-twitter-ffd82.firebaseapp.com',\r\n  projectId: 'mini-twitter-ffd82',\r\n  storageBucket: 'mini-twitter-ffd82.appspot.com',\r\n  messagingSenderId: '251752021580',\r\n  appId: '1:251752021580:web:66f60b6d94b1cc8043bee9',\r\n  measurementId: 'G-HEPDS3ET9C',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history} basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}