{"version":3,"sources":["components/InfoButton.js","helpers/GetUsersId.js","components/SearchButton.js","components/SearchField.js","resource/twitter.svg","pages/FirstPage.js","helpers/NavBarStyles.js","containers/NavBar.js","helpers/GetCommentData.js","components/Comment.js","helpers/GetCommentsId.js","components/Formater.js","helpers/GetTweetData.js","containers/Tweet.js","helpers/GetTweetsId.js","helpers/GetUserData.js","resource/calendar.svg","pages/TwittPage.js","App.js","reportWebVitals.js","index.js","config.js"],"names":["blueTheme","createMuiTheme","palette","primary","light","main","blue","dark","contrastText","useStyles","makeStyles","theme","typography","padding","spacing","fontFamily","join","InfoButton","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","IconButton","color","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","className","GetUsersData","a","db","firebase","firestore","collection","get","snapshot","docs","map","doc","SearchButton","handlerOnClick","value","document","querySelector","trim","users","state","length","some","window","process","pathSearch","location","reload","alert","GetUsersId","array","this","setState","Button","variant","Component","SearchField","props","keyPress","e","target","keyCode","Autocomplete","disableClearable","autoComplete","freeSolo","options","user","renderInput","params","TextField","label","onKeyDown","InputProps","type","defaultProps","FirstPage","alt","src","twitterImg","root","flexGrow","position","right","left","backgroundColor","menuButton","marginRight","title","display","marginLeft","breakpoints","up","search","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputInput","paddingLeft","SearchAppBar","AppBar","Toolbar","edge","href","pathHome","noWrap","GetCommentData","userId","tweetId","commentId","data","commentDate","moment","Date","seconds","format","date","image","Image","text","Text","name","Name","maxWidth","marginTop","marginBottom","media","paddingTop","avatar","textAlign","float","subheader","CommentCard","useEffect","Card","CardHeader","Avatar","CardContent","component","GetCommentsId","Formater","labelValue","Math","abs","Number","GetTweetData","docId","twittDate","likes","Likes","retweet","Retweet","expand","grey","transform","transition","transitions","create","duration","shortest","expandOpen","like","reply","fontSize","RecipeReviewCard","expanded","setExpanded","commentsState","setCommentsState","CardMedia","CardActions","disableSpacing","clsx","Collapse","in","timeout","unmountOnExit","paragraph","GetTweetsId","TweetsId","QuoteCheck","quote","style","GetUserData","Joined","ID","Following","Followers","Quote","TwittPage","myUrl","URL","replace","searchParams","CalImg","Tweet","onhashchange","App","history","exact","path","from","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createBrowserHistory","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5e9571e3.chunk.js","sourcesContent":["import blue from '@material-ui/core/colors/blue';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport {\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nimport React from 'react';\r\n\r\nconst blueTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#757ce8',\r\n      main: blue[400],\r\n      dark: '#002884',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(3),\r\n    fontFamily: ['Open Sans', 'serif'].join(','),\r\n  },\r\n}));\r\n\r\nfunction InfoButton() {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <MuiThemeProvider theme={blueTheme}>\r\n      <IconButton id=\"info-button\" color=\"primary\" onClick={handleClick}>\r\n        <InfoIcon />\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>\r\n          Это приложение отображает твиты разных пользователей. Вам нужно ввести\r\n          точный Ник профиля и нажать на кнопку Найти\r\n        </Typography>\r\n      </Popover>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default InfoButton;\r\n","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nexport default async function GetUsersData() {\r\n  const db = firebase.firestore();\r\n  const snapshot = await db.collection('users')\r\n  .get();\r\n\r\n  return snapshot.docs.map((doc) => ({ id: doc.id }));\r\n}\r\n","import { pathSearch } from '../config';\r\nimport GetUsersId from '../helpers/GetUsersId';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport React from 'react';\r\n\r\nconst blueTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#757ce8',\r\n      main: blue[400],\r\n      dark: '#002884',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nclass SearchButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const array = await GetUsersId();\r\n    this.setState({ users: array });\r\n  }\r\n\r\n  handlerOnClick = () => {\r\n    const value = document\r\n      .querySelector('.search-text-field')\r\n      .querySelector('input')\r\n      .value.trim();\r\n    const { users } = this.state;\r\n    if (\r\n      value.length !== 0\r\n      && users.some((doc) => doc.id === value)\r\n    ) {\r\n      window.open(`${process.env.PUBLIC_URL}#${pathSearch}?searchValue=${value}`, '_self');\r\n      window.location.reload();\r\n    } else if (\r\n      value.length !== 0\r\n    ) {\r\n      alert('Данного пользователя невозможно найти.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={blueTheme}>\r\n        <Button\r\n          className=\"search-button\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={this.handlerOnClick}\r\n        >\r\n          Найти\r\n        </Button>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\nexport default SearchButton;\r\n","import { pathSearch } from '../config';\r\nimport GetUsersId from '../helpers/GetUsersId';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\n\r\nclass SearchField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n    };\r\n    this.className = props.className;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const array = await GetUsersId();\r\n    this.setState({ users: array });\r\n  }\r\n\r\n  keyPress = (e) => {\r\n    const value = e.target.value.trim();\r\n    const { users } = this.state;\r\n    if (\r\n      e.keyCode === 13\r\n      && value.length !== 0\r\n      && users.some((doc) => doc.id === value)\r\n    ) {\r\n      window.open(`${process.env.PUBLIC_URL}#${pathSearch}?searchValue=${value}`, '_self');\r\n      window.location.reload();\r\n    } else if (\r\n      e.keyCode === 13\r\n      && value.length !== 0\r\n    ) {\r\n      alert('Данного пользователя невозможно найти.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n    return (\r\n      <Autocomplete\r\n        className={this.className}\r\n        disableClearable\r\n        autoComplete\r\n        freeSolo\r\n        options={users.map((user) => user.id)}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Поиск\"\r\n            onKeyDown={this.keyPress}\r\n            InputProps={{ ...params.InputProps, type: 'search' }}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSearchField.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nSearchField.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default SearchField;\r\n","export default __webpack_public_path__ + \"static/media/twitter.69921557.svg\";","import './FirstPage.css';\r\n\r\nimport InfoButton from '../components/InfoButton';\r\nimport SearchButton from '../components/SearchButton';\r\nimport SearchField from '../components/SearchField';\r\n\r\nimport twitterImg from '../resource/twitter.svg';\r\n\r\nimport React from 'react';\r\n\r\nexport default function FirstPage() {\r\n  return (\r\n    <>\r\n      <header>\r\n        <InfoButton className=\"info-button\" />\r\n      </header>\r\n\r\n      <main className=\"first-page-main\">\r\n        <div className=\"h1-and-icon\">\r\n          <h1>Mini Twitter</h1>\r\n          <img alt=\"Twitter icon\" className=\"twitter\" src={twitterImg} />\r\n        </div>\r\n\r\n        <div className=\"search-div\">\r\n          <SearchField className=\"search-text-field\" />\r\n          <SearchButton />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: 'fixed',\r\n    right: theme.spacing(0),\r\n    left: theme.spacing(0),\r\n    backgroundColor: '#42a5f5',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    color: '#fff',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: '#fff',\r\n    display: 'none',\r\n    marginLeft: theme.spacing(23),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    color: '#fff',\r\n    position: 'relative',\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    color: '#fff',\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import SearchField from '../components/SearchField';\r\n\r\nimport { pathHome } from '../config';\r\n\r\nimport useStyles from '../helpers/NavBarStyles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport React from 'react';\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar color=\"#42a5f5\" className={classes.root}>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inheru\"\r\n          href={`${process.env.PUBLIC_URL}#${pathHome}`}\r\n        >\r\n          <ArrowBackIosIcon />\r\n        </IconButton>\r\n        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n          Mini Twitter\r\n        </Typography>\r\n        <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n          </div>\r\n          <SearchField className={classes.inputInput} />\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nimport moment from 'moment';\r\n\r\nexport default async function GetCommentData(userId, tweetId, commentId) {\r\n    const db = firebase.firestore();\r\n\r\n    const doc = await db.collection(`${userId}Tweets`)\r\n    .doc(tweetId)\r\n    .collection('Comments')\r\n    .doc(commentId)\r\n    .get();\r\n\r\n    const data = doc.data();\r\n    const commentDate = moment(data.Date.seconds * 1000).format('MMMM DD, YYYY');\r\n\r\n    return {\r\n        date: commentDate,\r\n        image: data.Image,\r\n        text: data.Text,\r\n        name: data.Name,\r\n    };\r\n}\r\n","import GetCommentData from '../helpers/GetCommentData';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    maxWidth: 700,\r\n    marginTop: '30px',\r\n    marginBottom: '30px',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[500],\r\n  },\r\n  text: {\r\n    textAlign: 'left',\r\n  },\r\n  title: {\r\n    float: 'left',\r\n  },\r\n\r\n  subheader: {\r\n    marginTop: '20px',\r\n    width: '200px',\r\n    textAlign: 'left',\r\n  },\r\n}));\r\n\r\nexport default function CommentCard(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    date: 'Loading...',\r\n    image: '',\r\n    text: 'Loading...',\r\n    name: 'Loading',\r\n  });\r\n\r\n  const {\r\n    userId,\r\n    tweetId,\r\n    commentId,\r\n  } = props;\r\n\r\n  useEffect(async () => {\r\n    setState(await GetCommentData(userId, tweetId, commentId));\r\n  }, [userId, tweetId, commentId]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={<Avatar className={classes.avatar} src={state.image} />}\r\n        title={<p className={classes.title}>{state.name}</p>}\r\n        subheader={<p className={classes.subheader}>{state.date}</p>}\r\n      />\r\n      <CardContent>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          className={classes.text}\r\n        >\r\n          {state.text}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCommentCard.defaultProps = {\r\n  userId: '',\r\n  tweetId: '',\r\n  commentId: '',\r\n};\r\n\r\nCommentCard.propTypes = {\r\n  userId: PropTypes.string,\r\n  tweetId: PropTypes.string,\r\n  commentId: PropTypes.string,\r\n};\r\n","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nexport default async function GetCommentsId(userId, tweetId) {\r\n    const db = firebase.firestore();\r\n    const snapshot = await db.collection(`${userId}Tweets`)\r\n    .doc(tweetId)\r\n    .collection('Comments')\r\n    .get();\r\n\r\n    return snapshot.docs.map((doc) => doc.id);\r\n}\r\n","// Данная функция округляет большие значения для количества фолловеров, подписок, лайков, ретвитов.\r\n// Пример: 250000 <=> 250K\r\nexport default function Formater(labelValue) {\r\n    return (Math.abs(Number(labelValue)) >= 1.0e9\r\n    ? `${Math.abs(Number(labelValue)) / 1.0e9}B`\r\n    : // Six Zeroes for Millions\r\n    Math.abs(Number(labelValue)) >= 1.0e6\r\n    ? `${Math.abs(Number(labelValue)) / 1.0e6}M`\r\n    : // Three Zeroes for Thousands\r\n    Math.abs(Number(labelValue)) >= 1.0e3\r\n    ? `${Math.abs(Number(labelValue)) / 1.0e3}K`\r\n    : Math.abs(Number(labelValue)))\r\n}\r\n","import Formater from '../components/Formater';\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nimport moment from 'moment';\r\n\r\nexport default async function GetTweetData(userId, docId) {\r\n    const db = firebase.firestore();\r\n    const doc = await db\r\n    .collection(`${userId}Tweets`)\r\n    .doc(docId)\r\n    .get();\r\n\r\n    const data = doc.data();\r\n    const twittDate = moment(data.Date.seconds * 1000).format('hh:mm, MMMM DD, YYYY');\r\n\r\n    return {\r\n        date: twittDate,\r\n        image: data.Image,\r\n        likes: Formater(data.Likes),\r\n        retweet: Formater(data.Retweet),\r\n        text: data.Text,\r\n    };\r\n}\r\n","import Comment from '../components/Comment';\r\n\r\nimport GetCommentsId from '../helpers/GetCommentsId';\r\nimport GetTweetData from '../helpers/GetTweetData';\r\n\r\nimport '../pages/TwittPage.css';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 800,\r\n    marginTop: '30px',\r\n    marginBottom: '30px',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    color: grey[600],\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: grey[600],\r\n  },\r\n\r\n  like: {\r\n    color: grey[600],\r\n    width: '30px',\r\n    height: '30px',\r\n  },\r\n\r\n  reply: {\r\n    color: grey[600],\r\n    width: '30px',\r\n    height: '30px',\r\n  },\r\n\r\n  text: {\r\n    fontSize: '16px',\r\n    marginLeft: '5px',\r\n    marginRight: '5px',\r\n    color: grey[600],\r\n  },\r\n}));\r\n\r\nfunction RecipeReviewCard(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [state, setState] = useState({\r\n     date: 'Loading...',\r\n     image: '',\r\n     likes: 'Loading...',\r\n     retweet: 'Loading...',\r\n     text: 'Loading...',\r\n  });\r\n  const [commentsState, setCommentsState] = useState([]);\r\n\r\n  const {\r\n    name,\r\n    userId,\r\n    avatar,\r\n    docId,\r\n  } = props;\r\n\r\n  useEffect(async () => {\r\n    setState(await GetTweetData(userId, docId));\r\n    setCommentsState(await GetCommentsId(userId, docId));\r\n  }, [userId, docId]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const returnImage = () => {\r\n    if (state.image !== '') {\r\n      return (\r\n        <CardMedia className={classes.media} image={state.image} title=\"Image\" />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={<Avatar className={classes.avatar} src={avatar} />}\r\n        title={`${name} ${userId}`}\r\n        subheader={state.date}\r\n      />\r\n\r\n      {returnImage()}\r\n\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {state.text}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions disableSpacing className=\"statistics\">\r\n        <div className=\"statistics-container\">\r\n          <p className={classes.text}>\r\n            <b>{state.likes}</b>\r\n            &nbsp;Likes\r\n          </p>\r\n          <FavoriteIcon className={classes.like} />\r\n        </div>\r\n        <div className=\"statistics-container\">\r\n          <p className={classes.text}>\r\n            <b>{state.retweet}</b>\r\n            &nbsp;Retweets\r\n          </p>\r\n          <ReplyIcon className={classes.reply} />\r\n        </div>\r\n        <div className=\"statistics-container\">\r\n          <p className={classes.text}>\r\n            <b>{commentsState.length}</b>\r\n            &nbsp;Comments\r\n          </p>\r\n          <IconButton>\r\n            <CommentIcon\r\n              className={clsx(classes.expand, {\r\n                [classes.expandOpen]: expanded,\r\n              })}\r\n              onClick={handleExpandClick}\r\n            >\r\n              <ExpandMoreIcon />\r\n            </CommentIcon>\r\n          </IconButton>\r\n        </div>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>\r\n            {commentsState.map((id) => (\r\n              <Comment userId={userId} tweetId={docId} commentId={id} />\r\n            ))}\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n\r\nRecipeReviewCard.defaultProps = {\r\n  name: '',\r\n  userId: '',\r\n  avatar: '',\r\n  docId: '',\r\n};\r\n\r\nRecipeReviewCard.propTypes = {\r\n  name: PropTypes.string,\r\n  userId: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  docId: PropTypes.string,\r\n};\r\n\r\nexport default RecipeReviewCard;\r\n","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nexport default async function GetTweetsId(id) {\r\n    const db = firebase.firestore();\r\n    const snapshot = await db\r\n    .collection(`${id}Tweets`)\r\n    .get();\r\n\r\n    return {\r\n        TweetsId: snapshot.docs.map((doc) => doc.id),\r\n    };\r\n}\r\n","import Formater from '../components/Formater';\r\n\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nimport moment from 'moment';\r\n\r\nfunction QuoteCheck(quote) {\r\n    if (quote.length === 0) {\r\n      document.querySelector('blockquote').style.display = 'none';\r\n      return null;\r\n    }\r\n    return quote;\r\n}\r\n\r\nexport default async function GetUserData(id) {\r\n    const db = firebase.firestore();\r\n    const doc = await db\r\n    .collection('users')\r\n    .doc(id)\r\n    .get();\r\n\r\n    const data = doc.data();\r\n    const date = moment(data.Joined.seconds * 1000).format('MMMM YYYY');\r\n\r\n    return {\r\n        Name: data.Name,\r\n        ID: id,\r\n        Joined: date,\r\n        Following: Formater(data.Following),\r\n        Followers: Formater(data.Followers),\r\n        Quote: QuoteCheck(data.Quote),\r\n        Image: data.Image,\r\n    };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/calendar.ce421b1b.svg\";","import './TwittPage.css';\r\n\r\nimport NavBar from '../containers/NavBar';\r\nimport Tweet from '../containers/Tweet';\r\nimport GetTweetsId from '../helpers/GetTweetsId';\r\nimport GetUserData from '../helpers/GetUserData';\r\nimport CalImg from '../resource/calendar.svg';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport React from 'react';\r\n\r\nclass TwittPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      Name: 'Loading...',\r\n      ID: 'Loading...',\r\n      Joined: 'Loading...',\r\n      Following: 'Loading...',\r\n      Followers: 'Loading...',\r\n      Quote: 'Loading...',\r\n      Image: '',\r\n      TweetsId: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const myUrl = new URL(window.location.href.replace(/#/g, ''));\r\n    const id = myUrl.searchParams.get('searchValue');\r\n\r\n    this.setState(await GetUserData(id));\r\n    this.setState(await GetTweetsId(id));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      Name,\r\n      ID,\r\n      Joined,\r\n      Following,\r\n      Followers,\r\n      Quote,\r\n      Image,\r\n      TweetsId,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <main className=\"twittPage-main\">\r\n          <Avatar alt=\"Remy Sharp\" src={Image} id=\"avatar\" />\r\n          <h1>{Name}</h1>\r\n          <h3>{ID}</h3>\r\n          <blockquote>{Quote}</blockquote>\r\n          <div className=\"account-info\">\r\n            <div className=\"container\">\r\n              <img id=\"cal-img\" alt=\"User\" src={CalImg} />\r\n              <p>\r\n                &nbsp; Joined\r\n                {Joined}\r\n              </p>\r\n            </div>\r\n            <div className=\"container\">\r\n              <b>{Following}</b>\r\n              <p>&nbsp; Following</p>\r\n            </div>\r\n            <div className=\"container\">\r\n              <b>{Followers}</b>\r\n              <p>&nbsp; Followers</p>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n\r\n          {TweetsId.map((id) => (\r\n            <Tweet name={Name} userId={ID} avatar={Image} docId={id} />\r\n          ))}\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TwittPage;\r\n","import React from 'react';\r\n\r\nimport { pathHome, pathSearch } from './config.js'\r\n\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport FirstPage from './pages/FirstPage';\r\nimport TwittPage from './pages/TwittPage';\r\n\r\nwindow.onhashchange = function() {\r\n  location.reload();\r\n}\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n          <Switch>\r\n            <Route history={history} exact path={pathHome} component={FirstPage} />\r\n            <Route history={history} exact path={pathSearch} component={TwittPage} />\r\n            <Redirect from=\"/\" to={pathHome} />\r\n          </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n getCLS, getFID, getFCP, getLCP, getTTFB,\r\n}) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import App from './App';\r\n\r\nimport './index.css';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport firebase from 'firebase';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCdxtxrAle5FDE33LpqKFSSfVn5Kysvfic',\r\n  authDomain: 'mini-twitter-ffd82.firebaseapp.com',\r\n  projectId: 'mini-twitter-ffd82',\r\n  storageBucket: 'mini-twitter-ffd82.appspot.com',\r\n  messagingSenderId: '251752021580',\r\n  appId: '1:251752021580:web:66f60b6d94b1cc8043bee9',\r\n  measurementId: 'G-HEPDS3ET9C',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","module.exports = {\r\n    pathHome: '/home',\r\n    pathSearch: '/search',\r\n};\r\n"],"sourceRoot":""}